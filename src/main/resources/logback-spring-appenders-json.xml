<included>
	<!-- Define the Standard Output - Console JSON -->
	<appender name="STDOUT_JSON" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<timestamp/>
				<loggerName/>
				<logLevel/>
				<message/>
				<threadName/>
				<mdc/>
			</providers>
		</encoder>
	</appender>

	<!-- JSON File Appender -->
	<appender name="FILE_JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE}.json</file>
		<!-- <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"> -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- Combines size-based rolling and time-based rolling -->
			<fileNamePattern>${LOG_FILE_PATTERN}.json</fileNamePattern>
			<!-- Specify max size of a single log file -->
			<maxFileSize>${LOG_FILE_MAX_SIZE}</maxFileSize>
			<!-- Retain log history for a specific number of days -->
			<maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory>
			<!-- Specify file size Cap -->
			<totalSizeCap>${LOG_FILE_SIZE_CAP}</totalSizeCap>
		</rollingPolicy>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<providers>
				<timestamp/>
				<loggerName/>
				<logLevel/>
				<message/>
				<threadName/>
				<mdc/>
			</providers>
		</encoder>
	</appender>

	<!-- Asynchronous Logging JSON Text -->
	<appender name="ASYNC_JSON" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="FILE_JSON" />
		<queueSize>3000</queueSize>
		<discardingThreshold>0</discardingThreshold>
	</appender>
</included>
